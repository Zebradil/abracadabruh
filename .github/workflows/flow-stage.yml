name: flow-stage

on:
  push:
    branches:
      - main

jobs:
  lint:
    uses: ./.github/workflows/job-lint.yml
  test:
    uses: ./.github/workflows/job-test.yml
  release:
    needs:
      - test
      - lint
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.MYKSO_BOT_GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.MYKSO_BOT_GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: Mykso Bot
          GIT_AUTHOR_EMAIL: german.lashevich+mykso-bot@gmail.com
          GIT_COMMITTER_NAME: Mykso Bot
          GIT_COMMITTER_EMAIL: german.lashevich+mykso-bot@gmail.com
        with:
          extra_plugins: |
            @semantic-release/git
      - uses: actions/setup-go@v5
        if: steps.semantic.outputs.new_release_published == 'true'
        with:
          go-version: "1.21"
      - name: Install GoReleaser
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: goreleaser/goreleaser-action@v4
        with:
          install-only: true
      - name: Publish release
        if: steps.semantic.outputs.new_release_published == 'true'
        env:
          AUR_SSH_KEY: ${{ secrets.AUR_SSH_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_REPO_TOKEN: ${{ secrets.MYKSO_BOT_GITHUB_TOKEN }}
          RELEASE_NOTES: ${{ steps.semantic.outputs.new_release_notes }}
        run: |
          goreleaser release --clean \
            --release-notes <(echo "$RELEASE_NOTES")
